#ifndef _ERRORS

#define _ERRORS

#pragma region Configuration

	#define                 SIGN                                -

#pragma endregion

#pragma region Success

	typedef enum{
		SUCCESS                                         = 0
	} API_SUCCESS;

#pragma endregion

#pragma region Errors

	typedef enum{
		ERROR_PROGRAMMING_GENERIC                       = SIGN 100,
		ERROR_PROGRAMMING_INVALID_ARGUMENT              = ERROR_PROGRAMMING_GENERIC SIGN 1
	} ERROR_PROGRAMMING;

	typedef enum{
		ERROR_OPERATING_SYSTEM_GENERIC                  = SIGN 200,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_ALLOCATE       = ERROR_OPERATING_SYSTEM_GENERIC SIGN 1,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_OPEN_FOLDER    = ERROR_OPERATING_SYSTEM_GENERIC SIGN 2,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_OPEN_FILE      = ERROR_OPERATING_SYSTEM_GENERIC SIGN 3,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_LOAD_LIB       = ERROR_OPERATING_SYSTEM_GENERIC SIGN 4,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_FIND_FUNC      = ERROR_OPERATING_SYSTEM_GENERIC SIGN 5,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_GET_INFO       = ERROR_OPERATING_SYSTEM_GENERIC SIGN 6,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_RUN_COMMAND    = ERROR_OPERATING_SYSTEM_GENERIC SIGN 7,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_CHANGE_DIR     = ERROR_OPERATING_SYSTEM_GENERIC SIGN 8,
		ERROR_OPERATING_SYSTEM_UNABLE_TO_PRINT          = ERROR_OPERATING_SYSTEM_GENERIC SIGN 9
	} ERROR_OPERATING_SYSTEM;

	typedef enum{
		ERROR_MODULE_MANAGER_GENERIC                    = SIGN 300,
		ERROR_MODULE_MANAGER_NOT_FOUND                  = ERROR_MODULE_MANAGER_GENERIC SIGN 1
	} ERROR_MODULE_MANAGER;

	typedef enum{
		ERROR_MODULE_GENERIC                            = SIGN 400,
		ERROR_MODULE_LOADING_FAILED                     = ERROR_MODULE_GENERIC SIGN 1,
		ERROR_MODULE_NOT_EXPLOITABLE                    = ERROR_MODULE_GENERIC SIGN 2
	} ERROR_MODULE;

#pragma endregion

#endif